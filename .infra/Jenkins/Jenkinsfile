pipeline {
    agent any
    parameters{
        string(name:"DOCKER_USERNAME")
        password(name:"DOCKER_PASSWORD")
    }
    stages {
        stage('Build') {
            steps {
                sh script: '''
                    echo "I am in build step"
                    chmod +x gradlew
                    ./gradlew build
                ''',
            label: "Building Project"
            }
        }
        stage('Test')
        {
            steps {
                sh script: '''
                    echo "I am in Test step"
                    ./gradlew test
                ''',
            label: "Running Unit Test Cases"
            }
        }
        stage('Static Code Analysis')
        {
            steps {
                sh script: '''
                    echo "I am in Sonarqube scan"
                    gradlew sonarqube -Dsonar.projectKey=Merchant-Galaxy-JavaProject -Dsonar.host.url=http://localhost:9000 -Dsonar.login=6df02ca3da9107c5ef60c3d2407089ba0f2b8906
                ''',
            label: "Running Sonarqube Scan"
            }
        }
        stage('Build DockerImage')
        {
            steps {
                sh script: '''
                    echo "I am Building DockerImage ="
                    docker build -t mogimage:1.0 .
                ''',
            label: "Building Docker Image"
            }
        }
        stage('Docker Login')
        {
            steps {
                sh "docker login -u ${env:DOCKER_USERNAME} -p ${env:DOCKER_PASSWORD}"
            }
        }
        stage('tag')
        {
            steps{
                sh script:'''
                    docker tag mogimage:1.0 siva546/merchant_galaxy:latest
                    '''
            }
        }
        
        stage('Docker Push')
        {
            steps {
                sh script: '''
                    echo "I am Pushing DockerImage ="
                    docker push siva546/merchant_galaxy:latest
                ''',
            label: "Pushing Docker Image"
            }
        }
    }
}
